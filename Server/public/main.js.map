{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Guards/auth.guard.ts","./src/app/admin-add-food/admin-add-food.component.ts","./src/app/admin-add-food/admin-add-food.component.html","./src/app/admin-individual-restuarant/admin-individual-restuarant.component.ts","./src/app/admin-individual-restuarant/admin-individual-restuarant.component.html","./src/app/admin-login/admin-login.component.ts","./src/app/admin-login/admin-login.component.html","./src/app/admin-restuarant-dashboard/admin-restuarant-dashboard.component.ts","./src/app/admin-restuarant-dashboard/admin-restuarant-dashboard.component.html","./src/app/admin-update-food/admin-update-food.component.ts","./src/app/admin-update-food/admin-update-food.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/individual-restuarant/individual-restuarant.component.ts","./src/app/individual-restuarant/individual-restuarant.component.html","./src/app/logincomponent/logincomponent.component.ts","./src/app/logincomponent/logincomponent.component.html","./src/app/otp-dialog/otp-dialog.component.ts","./src/app/otp-dialog/otp-dialog.component.html","./src/app/restuarant.service.ts","./src/app/restuarant/restuarant.component.ts","./src/app/restuarant/restuarant.component.html","./src/app/signupcomponent/signupcomponent.component.ts","./src/app/signupcomponent/signupcomponent.component.html","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router} from '@angular/router';\r\nimport {AuthService} from './../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  \r\n  constructor(private authService: AuthService,private router: Router){ }\r\n    canActivate() : boolean{\r\n      if(this.authService.loggedIn()){\r\n        return true;\r\n      }\r\n      else{\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      }\r\n    }\r\n  \r\n  \r\n}\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup , ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin-add-food',\r\n  templateUrl: './admin-add-food.component.html',\r\n  styleUrls: ['./admin-add-food.component.css']\r\n})\r\nexport class AdminAddFoodComponent implements OnInit {\r\n  addRestuarants: FormGroup\r\n  images: any;\r\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private snackbar: MatSnackBar, private router: Router) {\r\n    this.addRestuarants = this.formBuilder.group({\r\n      name: '',\r\n      about:'',\r\n      location:'',\r\n      Items: this.formBuilder.array([]) ,\r\n    });\r\n   }\r\n\r\n   backTorestaurants(){\r\n     this.router.navigate(['/admin/restaurants'])\r\n   }\r\n\r\n   quantities() : FormArray {\r\n    return this.addRestuarants.get(\"Items\") as FormArray\r\n  }\r\n   \r\n  newQuantity(): FormGroup {\r\n    return this.formBuilder.group({\r\n      foodName: '',\r\n      price: '',\r\n    })\r\n  }\r\n   \r\n  addQuantity() {\r\n    this.quantities().push(this.newQuantity());\r\n  }\r\n   \r\n  removeQuantity(i:number) {\r\n    this.quantities().removeAt(i);\r\n  }\r\n\r\n  onFileUpload(e) {\r\n    if (e.target.files.length > 0) {\r\n      const file = e.target.files[0];\r\n      this.images = file;\r\n    }\r\n  }\r\n\r\n  \r\n  async addItems(){\r\n    let success = await this.http.post('restaurants',this.addRestuarants.value).subscribe();\r\n      if(success){\r\n        this.snackbar.open('Items Added Successfully', null, {duration: 2000});\r\n        this.router.navigate(['/admin/restaurants']);\r\n      }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"restuarantForm\">\r\n    <h2>Add Restaurant</h2>\r\n    <form [formGroup]='addRestuarants'>\r\n        \r\n        <div class=\"row\">\r\n            <mat-form-field class=\"col-sm-8\">\r\n                <mat-label>Restaurant Name:</mat-label>\r\n                <input matInput type=\"text\" required  placeholder=\"Enter Restaurant Name\" formControlName='name'>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col-sm-8\">\r\n              <mat-label>About Restaurant:</mat-label>\r\n              <input matInput type=\"text\" required  placeholder=\"About Restaurant\" formControlName='about'>\r\n          </mat-form-field>\r\n      </div>\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-sm-8\">\r\n            <mat-label>Location:</mat-label>\r\n            <input matInput type=\"text\" required  placeholder=\"Enter Location\" formControlName='location'>\r\n        </mat-form-field>\r\n    </div>\r\n        <table class=\"row table table-bordered col-sm-8\" formArrayName=\"Items\">\r\n            <tr>\r\n              <th colspan=\"2\">Add Items:</th>\r\n              <th><button type=\"button\" (click)=\"addQuantity()\" class=\"btn btn-success\">Add More</button></th>\r\n            </tr>\r\n            <tr *ngFor=\"let quantity of quantities().controls; let i=index\" [formGroupName]=\"i\">\r\n              <td>\r\n                <mat-form-field class=\"col-sm-8\">\r\n                    <mat-label>Food:</mat-label>\r\n                    <input matInput type=\"text\" required  placeholder=\"Enter Food Name\" formControlName='foodName'>\r\n                </mat-form-field>\r\n              </td>\r\n              <td>\r\n                <mat-form-field class=\"col-sm-8\">\r\n                    <mat-label>Price:</mat-label>\r\n                    <input matInput type=\"number\" required  placeholder=\"Enter Price Name\" formControlName='price'>\r\n                </mat-form-field>\r\n              </td>\r\n              <td>\r\n                  <button (click)=\"removeQuantity(i)\" class=\"btn btn-warning\">Remove</button>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n         <button mat-raised-button class=\"quickView\" (click)='addItems()'>Add Items</button>\r\n        \r\n    </form>\r\n    <button mat-raised-button class=\"quickView mt-4\" (click)='backTorestaurants()'>Back To Restaurants</button>\r\n</div>","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport {Product} from './../models/Product';\r\n\r\n@Component({\r\n  selector: 'app-admin-individual-restuarant',\r\n  templateUrl: './admin-individual-restuarant.component.html',\r\n  styleUrls: ['./admin-individual-restuarant.component.css']\r\n})\r\nexport class AdminIndividualRestuarantComponent implements OnInit {\r\n  productId: any;\r\n  itemArray:Product[] = [];\r\n  products: [string, any][];\r\n  productArray: any;\r\n  name: string;\r\n  about: any;\r\n  location: any;\r\n  \r\n\r\n  constructor(private http: HttpClient,private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe((params: ParamMap) => {\r\n      const id = params.get('id');\r\n      this.productId = id;\r\n    });\r\n    this.getRestuarantbyId();\r\n  }\r\n  getRestuarantbyId(){\r\n    this.http.get(`adminRestaurants/${this.productId}`).subscribe(\r\n      res=>{\r\n        this.products = Object.entries(res);\r\n        this.productArray = this.products[0][1];\r\n        this.name = this.productArray.name;\r\n        this.about = this.productArray.about;\r\n        this.location = this.productArray.location;\r\n        this.productArray.Items.forEach(item => {\r\n          const items = {\r\n            _id : item._id,\r\n            foodName : item.foodName,\r\n            price : item.price\r\n          };\r\n          this.itemArray.push(items);\r\n        })\r\n      });\r\n  }\r\n  backTorestuarants(){\r\n    this.router.navigate(['/admin/restaurants']);\r\n  }\r\n\r\n \r\n}\r\n","<div class=\"tableValues\">\r\n  <h2 class=\"row\">{{name}}</h2>\r\n  <h4 class=\"row\">{{about}}</h4>\r\n  <h5 class=\"row\">{{location}}</h5>\r\n    <table class=\"table table-hover table-bordered\">\r\n        <thead>\r\n            <tr>\r\n              <th >Dish</th>\r\n              <th>Price:</th>\r\n            </tr>\r\n          </thead>\r\n         <tbody >\r\n           <tr *ngFor=\"let item of itemArray\">\r\n            <td>{{item.foodName}}</td>\r\n            <td>{{item.price}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <button mat-raised-button class=\"quickView\" (click)='backTorestuarants()'>Back To Restaurants</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './admin-login.component.html',\r\n  styleUrls: ['./admin-login.component.css']\r\n})\r\nexport class AdminLoginComponent implements OnInit {\r\n  adminLogin: FormGroup\r\n  constructor(private formBuilder: FormBuilder, private snackbar: MatSnackBar, private router: Router) { \r\n    this.adminLogin = this.formBuilder.group({\r\n      emailId:[''],\r\n      password:['']\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  adminLoginBtn(){\r\n    if(this.adminLogin.value.emailId == 'admin@gmail.com' && this.adminLogin.value.password == 'admin123'){\r\n      this.snackbar.open('Login Successfully',null, {duration:3000});\r\n      this.router.navigate(['/admin/restaurants'])\r\n    }\r\n    else{\r\n      this.snackbar.open('Invalid Login',null, {duration:3000})\r\n    }\r\n  }\r\n}\r\n","<div class=\"adminLogin\">\r\n    <div class=\"adminForm\">\r\n        <form [formGroup]='adminLogin'>\r\n            <div class=\"row\">\r\n                <h1>Admin Login</h1>\r\n            </div>\r\n            <div class=\"row\">\r\n                <mat-form-field class=\"col-sm-6 loginEmailId\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput type=\"email\" required  placeholder=\"Enter Email Address\" formControlName='emailId'>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"row\">\r\n                <mat-form-field class=\"col-sm-6 loginPassword\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput type=\"password\" placeholder=\"Enter Password\" formControlName = 'password' required>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"row\">\r\n                <button mat-raised-button id=\"signUpButton\" (click)='adminLoginBtn()'>LOGIN</button>\r\n            </div>\r\n        </form> \r\n    </div>\r\n       \r\n</div>\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Restaurants } from '../models/Restaurants';\r\nimport {RestuarantService} from './../restuarant.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-restuarant-dashboard',\r\n  templateUrl: './admin-restuarant-dashboard.component.html',\r\n  styleUrls: ['./admin-restuarant-dashboard.component.css']\r\n})\r\nexport class AdminRestuarantDashboardComponent implements OnInit {\r\n  itemArray : any=[];\r\n  products: [string, unknown][];\r\n  constructor(private router: Router, private http: HttpClient, private restuarantService: RestuarantService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRestuarant();\r\n  }\r\n  addRestuarants(){\r\n    this.router.navigate(['/admin/addRestaurants']);\r\n  }\r\n\r\n  getRestuarant(){\r\n    this.http.get('adminRestaurants').subscribe( \r\n    res => {      \r\n      this.itemArray = res;\r\n    });    \r\n  }\r\n\r\n  individualRestuaratnt(item){\r\n    this.router.navigate(['/admin/restaurants',item._id]);\r\n  }\r\n\r\n  async deleteRestuarant(item){\r\n    await this.http.delete(`restaurants/${item._id}`).subscribe(res=>{\r\n      this.getRestuarant();\r\n    })\r\n  }\r\n  editItems(item:Restaurants){\r\n    this.restuarantService.selectedProduct = item;    \r\n    this.router.navigate(['/admin/updateRestaurants']);\r\n  }\r\n}\r\n","<h2>List Of Restaurants</h2>\r\n<div class=\"tableValues\">\r\n    <table class=\"table table-hover table-bordered\">\r\n        <thead>\r\n            <tr>\r\n              <th>Restaurant Name</th>\r\n              <th>About</th>\r\n              <th>Location</th>\r\n              <th></th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n         <tbody >\r\n            <tr *ngFor=\"let item of itemArray\">\r\n              <td>{{item.name}}</td>\r\n              <td>{{item.about}}</td>\r\n              <td>{{item.location}}</td>\r\n              <td><button mat-raised-button class=\"quickView\" (click)='individualRestuaratnt(item)'>View Items</button></td>\r\n              <td><button mat-raised-button class=\"quickView\" (click)='editItems(item)'>Edit Items</button></td>\r\n              <td><button mat-raised-button class=\"quickView\" (click)='deleteRestuarant(item)'>Remove Restaurant</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <button mat-raised-button class=\"quickView\" (click)='addRestuarants()'>Add Restaurants</button>\r\n</div>","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { RestuarantService } from '../restuarant.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-update-food',\r\n  templateUrl: './admin-update-food.component.html',\r\n  styleUrls: ['./admin-update-food.component.css']\r\n})\r\nexport class AdminUpdateFoodComponent implements OnInit {\r\nupdateRestuarants: FormGroup\r\nitemUpdateForm: FormGroup\r\naddMoreItems:boolean = false;\r\n  constructor(private formBuilder: FormBuilder, public restuarantService: RestuarantService, private http: HttpClient, private router: Router) { \r\n    this.updateRestuarants = this.formBuilder.group({\r\n      Items: this.formBuilder.array([]) ,\r\n    });\r\n  \r\n  this.itemUpdateForm = this.formBuilder.group({\r\n    name: '',\r\n    Items: this.formBuilder.array([])\r\n  });\r\n}\r\n\r\naddMoreitems(){\r\n  this.addMoreItems = true;\r\n}\r\n\r\n  quantities() : FormArray {\r\n    return this.updateRestuarants.get(\"Items\") as FormArray\r\n  }\r\n   \r\n  newQuantity(): FormGroup {\r\n    return this.formBuilder.group({\r\n      foodName: '',\r\n      price: '',\r\n    })\r\n  }\r\n   \r\n  addQuantity() {\r\n    this.quantities().push(this.newQuantity());\r\n  }\r\n   \r\n  removeQuantity(i:number) {\r\n    this.quantities().removeAt(i);\r\n  }\r\n  ngOnInit(): void {\r\n    this.setValue();\r\n  }\r\n\r\n  get itemsArray()\r\n  {\r\n    return this.itemUpdateForm.get('Items') as FormArray\r\n  }\r\n\r\n  createGroupItem(data:any=null)\r\n  {\r\n    data=data || {foodName:'',price:0}\r\n    return this.formBuilder.group({\r\n      foodName:data.foodName,\r\n      price:data.price\r\n    })\r\n  }\r\n\r\n  setValue() {\r\n    this.restuarantService.selectedProduct.Items.forEach(x=>this.itemsArray.push(this.createGroupItem()))\r\n    this.itemUpdateForm.patchValue({\r\n      name: this.restuarantService.selectedProduct.name,\r\n      Items: this.restuarantService.selectedProduct.Items\r\n    });\r\n  }\r\n\r\n\r\n  updateItems(){\r\n    console.log(this.itemUpdateForm.value);\r\n      this.http.put(`restaurants/${this.restuarantService.selectedProduct._id}`,this.itemUpdateForm.value).subscribe(\r\n      res => {\r\n          this.router.navigate(['/admin/restaurants',this.restuarantService.selectedProduct._id]);\r\n        \r\n      });\r\n  }\r\n\r\n  newUpdatedItems(){\r\n    console.log(this.updateRestuarants.value);\r\n    this.http.put(`restaurants/${this.restuarantService.selectedProduct._id}`,this.updateRestuarants.value).subscribe(\r\n      res => {\r\n          this.router.navigate(['/admin/restaurants',this.restuarantService.selectedProduct._id]);\r\n        \r\n      });\r\n  }\r\n}\r\n","<div class=\"restuarantForm tableValues m-3 p-3\">\r\n    <h2>Update Restaurant</h2>\r\n    <form *ngIf=\"!addMoreItems\"[formGroup]='itemUpdateForm'>\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-sm-5\">\r\n            <mat-label>Restaurant Name:</mat-label>\r\n            <input matInput type=\"text\" required  placeholder=\"Enter Restaurant Name\" formControlName='name'>\r\n        </mat-form-field>\r\n      </div>\r\n      <div formArrayName=\"Items\">\r\n        <div class=\"row\" *ngFor=\"let control of itemsArray.controls;let i=index\" [formGroupName]=\"i\">\r\n          <mat-form-field class=\"col-sm-5\">\r\n            <mat-label>Food Name:</mat-label>          \r\n            <input matInput type=\"text\" placeholder=\"Enter Food Name\" formControlName='foodName'>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"col-sm-5\" >\r\n            <mat-label>Price:</mat-label>\r\n            <input matInput type=\"number\" required  placeholder=\"Enter Price\" formControlName='price'>\r\n          </mat-form-field>\r\n        </div>  \r\n      </div>\r\n      <button mat-raised-button class=\"quickView mb-3\" (click)='updateItems()' >Update Items</button>\r\n    </form>\r\n\r\n    <form *ngIf='addMoreItems' [formGroup]='updateRestuarants'>\r\n      <!-- <div class=\"row\">\r\n        <mat-form-field class=\"col-sm-8\" hidden>\r\n            <mat-label>Restaurant Name:</mat-label>\r\n            <input matInput type=\"text\"  required  placeholder=\"Enter Restaurant Name\" formControlName='name'>\r\n        </mat-form-field>\r\n      </div> -->\r\n      <div class=\"tableValues m-3 p-3 col-sm-8\">\r\n        <table class=\"row table table-hover table-bordered col-sm-8 p-3\" formArrayName=\"Items\">\r\n            <tr>\r\n              <th colspan=\"2\">Add Items:</th>\r\n              <th><button type=\"button\" (click)=\"addQuantity()\"  class=\"btn btn-success\">Add More</button></th>\r\n            </tr>\r\n            <tr *ngFor=\"let quantity of quantities().controls; let i=index\" [formGroupName]=\"i\">\r\n              <td>\r\n                <mat-form-field class=\"col-sm-5\">\r\n                    <mat-label>Food:</mat-label>\r\n                    <input matInput type=\"text\" required  placeholder=\"Enter Food Name\" formControlName='foodName'>\r\n                </mat-form-field>\r\n              </td>\r\n              <td>\r\n                <mat-form-field class=\"col-sm-5\">\r\n                    <mat-label>Price:</mat-label>\r\n                    <input matInput type=\"number\" required  placeholder=\"Enter Price Name\" formControlName='price'>\r\n                </mat-form-field>\r\n              </td>\r\n              <td>\r\n                  <button (click)=\"removeQuantity(i)\" class=\"btn btn-warning\">Remove</button>\r\n              </td>\r\n            </tr>\r\n        </table>\r\n         <button mat-raised-button class='quickView' (click)='newUpdatedItems()' >Update Items</button>\r\n      </div>\r\n    </form>\r\n    <button mat-raised-button class=\"mt-5 quickView\" [disabled]='addMoreItems' (click)='addMoreitems()'>Add More Items</button>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RestuarantComponent } from './restuarant/restuarant.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\r\nimport { AdminRestuarantDashboardComponent } from './admin-restuarant-dashboard/admin-restuarant-dashboard.component';\r\nimport { AdminAddFoodComponent } from './admin-add-food/admin-add-food.component';\r\nimport { AdminIndividualRestuarantComponent } from './admin-individual-restuarant/admin-individual-restuarant.component';\r\nimport { AdminUpdateFoodComponent } from './admin-update-food/admin-update-food.component';\r\nimport { IndividualRestuarantComponent } from './individual-restuarant/individual-restuarant.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { AuthGuard } from './Guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomepageComponent},\r\n  {path: 'restaurants', component: RestuarantComponent , \r\n  //  canActivate:[AuthGuard]\r\n},\r\n  {path: 'restaurants/:id', component: IndividualRestuarantComponent, canActivate:[AuthGuard]},\r\n  {path: 'cart/:id',component: CartComponent, canActivate:[AuthGuard]},\r\n  {path:'admin',\r\n      children:[\r\n        {path:'login', component: AdminLoginComponent},\r\n        {path:'restaurants', component: AdminRestuarantDashboardComponent},\r\n        {path:'addRestaurants', component: AdminAddFoodComponent},\r\n        {path:'restaurants/:id', component: AdminIndividualRestuarantComponent},\r\n        {path:'updateRestaurants', component: AdminUpdateFoodComponent}\r\n      ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\nexport const routingComponents = [RestuarantComponent];\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'HungerEnd';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\n\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { LogincomponentComponent } from './logincomponent/logincomponent.component';\r\nimport { SignupcomponentComponent } from './signupcomponent/signupcomponent.component';\r\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {HttpClientModule, HttpInterceptor, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\r\nimport { AdminRestuarantDashboardComponent } from './admin-restuarant-dashboard/admin-restuarant-dashboard.component';\r\nimport { AdminAddFoodComponent } from './admin-add-food/admin-add-food.component';\r\nimport { AdminIndividualRestuarantComponent } from './admin-individual-restuarant/admin-individual-restuarant.component';\r\nimport { AdminUpdateFoodComponent } from './admin-update-food/admin-update-food.component';\r\nimport { IndividualRestuarantComponent } from './individual-restuarant/individual-restuarant.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { OtpDialogComponent } from './otp-dialog/otp-dialog.component';\r\nimport {AuthGuard} from './Guards/auth.guard';\r\nimport {TokenInterceptorService} from './token-interceptor.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomepageComponent,\r\n    LogincomponentComponent,\r\n    SignupcomponentComponent,\r\n    routingComponents,\r\n    AdminLoginComponent,\r\n    AdminRestuarantDashboardComponent,\r\n    AdminAddFoodComponent,\r\n    AdminIndividualRestuarantComponent,\r\n    AdminUpdateFoodComponent,\r\n    IndividualRestuarantComponent,\r\n    CartComponent,\r\n    OtpDialogComponent,\r\n  ],\r\n  /*entryComponents: [LogincomponentComponent,\r\n    SignupcomponentComponent],*/\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatGridListModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [AuthGuard , {\r\n    provide:HTTP_INTERCEPTORS,\r\n    useClass:TokenInterceptorService,\r\n    multi:true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  loggedIn(){\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  getToken(){\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  logOutuser(){\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/'])\r\n  }\r\n}\r\n","import { HttpClient, HttpClientModule, HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RestuarantService } from '../restuarant.service';\r\nimport {Cart} from '../models/Cart';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { OtpDialogComponent } from '../otp-dialog/otp-dialog.component';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  cartItems:Cart[]= [];\r\n  products: [string, any][];\r\n  productArray: any;\r\n  name: any;\r\n  userId: any;\r\n  totalAmount: number;\r\n  empty: boolean = true;\r\n  errorMessage: string;\r\n  count: number = 0;\r\n  countZero: boolean = false;\r\n  itemsArray = [];\r\n  cartId: any;\r\n  constructor(public restuarantService: RestuarantService,private router: Router,private http: HttpClient, private dialog:MatDialog,public authService:AuthService) { }\r\n\r\n  async ngOnInit(): Promise<any> {\r\n    await this.restuarantService.getUserid();\r\n    await this.getCartItems();\r\n  }\r\n  backTorestuarants(){\r\n    this.router.navigate(['/restaurants',this.restuarantService.productId]);\r\n  }\r\n\r\n  redirectToRestuarants(){\r\n    this.router.navigate(['/restaurants']);\r\n  }\r\n\r\n \r\n  \r\n\r\n  async getCartItems(){\r\n    await this.http.get(`cart/${this.restuarantService.userId}`).subscribe(\r\n      res => {\r\n        this.products = Object.entries(res);\r\n        this.productArray = this.products[0][1];\r\n        this.cartId = this.productArray._id;\r\n        this.restuarantService.cartId = this.cartId;\r\n        this.name = this.productArray.name;\r\n        this.userId = this.productArray.userId;\r\n        this.totalAmount = this.productArray.totalAmount;\r\n        this.productArray.array.forEach(item => {\r\n          const items = {\r\n            id : item._id,\r\n            foodName : item.foodName,\r\n            price : item.price,\r\n            count : item.count,\r\n            amount:item.amount\r\n          };\r\n          this.count = this.count+item.count;\r\n          this.cartItems.push(items);\r\n        })\r\n      },\r\n      err=>{\r\n        this.empty = false;\r\n        this.errorMessage = err.error;\r\n        if(err instanceof HttpErrorResponse){\r\n          if(err.status === 401){\r\n            this.router.navigate(['/']);\r\n          }\r\n        }\r\n      }\r\n      );\r\n  }\r\n\r\n\r\n  decrementQuantity(item){\r\n    \r\n    //item.individualAmount = 0;\r\n    this.count = this.count-1;\r\n    if(item.count==1){\r\n      this.countZero = true;\r\n    }\r\n    item.count = item.count-1;\r\n    item.amount = item.price*item.count;\r\n    this.totalAmount = this.totalAmount-item.price;\r\n    this.cartItems.push(item);\r\n    this.updateCart(this.cartItems);\r\n  }\r\n\r\n  incrementQuantity(item){\r\n    \r\n    //this.individualAmount = 0;\r\n    this.count = this.count+1;\r\n    if(item.count>1){\r\n      this.countZero = false;\r\n    }\r\n    item.count = item.count+1;\r\n    item.amount = item.price*item.count;\r\n    this.totalAmount = this.totalAmount+item.price;\r\n    this.cartItems.push(item);\r\n    \r\n    this.updateCart(this.cartItems);\r\n  }\r\n\r\n  updateCart(items){\r\n    let ids = items.map(o => o.id)\r\n    let uniqueItems = items.filter(({id}, index) => !ids.includes(id, index+1))\r\n    this.cartItems = (uniqueItems.filter(item => item.count));\r\n    const obj = {\r\n      userId:this.userId,\r\n      name:this.name,\r\n      array:this.cartItems,\r\n      totalAmount:this.totalAmount\r\n    }\r\n    this.http.put(`cart/${this.cartId}`,obj).subscribe();\r\n  }\r\n\r\n  removeCart(){\r\n    this.http.delete(`cart/${this.cartId}`).subscribe(\r\n      res=>{\r\n        this.empty = true;\r\n        this.getCartItems();\r\n      }\r\n    );\r\n  }\r\n  placeOrder(){\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.width = '50%';\r\n    const dialogRef = this.dialog.open(OtpDialogComponent,dialogConfig);\r\n  }\r\n}\r\n","<mat-toolbar class=\"navbar\">\r\n    <div>\r\n        <h2 style=\"color: black;\" >Hunger End</h2>\r\n    </div>\r\n    <div class=\"toolbar\">\r\n        <span>\r\n            <button mat-button class=\"quickView\" (click)='authService.logOutuser()'><i class=\"fa fa-user\" ></i>Log Out</button>\r\n        </span>\r\n    </div>\r\n</mat-toolbar>\r\n<div class=\"bgImage\">\r\n    <div  *ngIf=\"!empty\" >\r\n        <h1>{{errorMessage}}</h1>\r\n        <button class='buttons quickView' mat-raised-button (click)='redirectToRestuarants()'>Go To Restaurants</button>\r\n    </div>\r\n    \r\n    <div *ngIf=\"empty\" class=\"tableValues\">\r\n        <h1>{{name}}  <button  style=\"float: right;\" class=\"quickView\" mat-raised-button (click)='removeCart()'>Delete Cart</button> </h1>\r\n        <table class=\"table table-striped table-secondary table-warning\">\r\n            <thead>\r\n                <th>Food Name</th>\r\n                <th>Price</th>\r\n                <th>Count</th>\r\n                <th>Individual Amount</th>\r\n            </thead>\r\n            <tbody *ngFor=\"let item of cartItems\">\r\n                <td>{{item.foodName}}</td>\r\n                <td>{{item.price}}</td>\r\n                <td><button mat-raised-button [disabled]='!item.count' (click)='decrementQuantity(item)'> - </button>  {{item.count}}  <button mat-raised-button (click)='incrementQuantity(item)'> + </button></td>\r\n                <td>{{item.amount}}</td>\r\n            </tbody>\r\n        </table>\r\n        <h1>Cart Items</h1>\r\n        <table class =\"col-sm-6 table table-striped table-bordered table-success\"> \r\n            <thead>\r\n                <th>No.Of.Items</th>\r\n                <th>Total Amount</th>    \r\n            </thead>\r\n            <tbody>\r\n                <td>{{count}}</td>\r\n                <td>{{totalAmount}}</td>\r\n            </tbody>\r\n        </table>\r\n        <button mat-raised-button [disabled]='!count'  (click)='placeOrder()' class=\"quickView\">Place Order</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { LogincomponentComponent } from '../logincomponent/logincomponent.component';\nimport { SignupcomponentComponent } from '../signupcomponent/signupcomponent.component';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit { \n  constructor(public dialog: MatDialog,private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  openLogindialog(): void{\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '50%';\n    this.dialog.open(LogincomponentComponent, dialogConfig);\n  }\n\n  openSignupdialog(): void{\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '50%';\n    this.dialog.open(SignupcomponentComponent, dialogConfig);\n  }\n  redirectToAdmin(){\n    this.router.navigate(['/admin/login']);\n  }\n}\n","<div class=\"row contents\">\r\n    <div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n        <div class=\"row col-lg-6 offset-lg-2 col-md-2 offset-md-2 col-sm-2 offset-sm-2 mt-5\">\r\n            <img src=\"./../../assets//Images/HUNGER END LOGO.png\" width=\"50%\" id=\"swiggyLogo\" class=\"mt-5\" alt=\"\">\r\n        </div>\r\n        <div class=\"col-lg-6 offset-lg-2 col-md-2 offset-md-2 col-sm-2 offset-sm-2 mt-5 loginSignupButtons\">\r\n            <button mat-raised-button style=\"width: 50%;\"  class=\"btn btn-outline-success \" (click)='openLogindialog()'>Login</button>\r\n            <button mat-raised-button style=\"width: 50%;\" class=\"btn btn-outline-warning\"(click)='openSignupdialog()'>SignUp</button>  \r\n        </div>\r\n        \r\n        <div class=\"row col-lg-6 offset-lg-2 col-md-2 offset-md-2 col-sm-2 offset-sm-2\">        \r\n            <span class=\"mt-5\" id=\"andriodStore\"><b>Your Hunger Partner</b></span>\r\n        </div>\r\n\r\n        <div class=\"row col-lg-6 offset-lg-2 col-md-2 offset-md-2 col-sm-2 offset-sm-2 mt-5\">\r\n            <span class=\"ml-5\">Not an User?  <button class=\"btn btn-success\" (click)='redirectToAdmin()'> Click Here</button></span>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-lg-6 col-md-6 col-sm-6\">\r\n        <div class=\"imageSide\">\r\n               \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"row\" style=\"height:100%; margin: 0px !important;\">\r\n    <div class=\"container col-lg-6 col-md-12 col-sm-12 loginSide\">\r\n        <img src=\"./../../assets/Images/HUNGER END LOGO.png\" alt=\"SwiggyImage\" id=\"swiggyLogo\">\r\n        <div class=\"row loginSignupButtons\">\r\n            <div class=\"col-lg-12 mx-auto\">\r\n                <button mat-raised-button id=\"loginButton\" class=\"btn btn-outline-success \" (click)='openLogindialog()'>Login</button>\r\n                <button mat-raised-button id=\"signupButton\" class=\"btn btn-outline-warning\"(click)='openSignupdialog()'>SignUp</button>  \r\n            </div>                    \r\n        </div>\r\n        <div class=\"row\">        \r\n            <span id=\"andriodStore\"><b>Your Hunger Partner</b></span>\r\n        </div>\r\n    </div>\r\n    <div class=\"container col-lg-6\" >\r\n        <div class=\"imageSide\">\r\n        </div>\r\n    </div>\r\n</div> -->","import { HttpClient, HttpClientModule, HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\nimport { Product } from '../models/Product';\r\nimport { RestuarantService } from '../restuarant.service';\r\n\r\n@Component({\r\n  selector: 'app-individual-restuarant',\r\n  templateUrl: './individual-restuarant.component.html',\r\n  styleUrls: ['./individual-restuarant.component.css']\r\n})\r\nexport class IndividualRestuarantComponent implements OnInit {\r\n  productId: string;\r\n  itemArray:Product[] = [];\r\n  products: [string, any][];\r\n  productArray: any;\r\n  name: string;\r\n  about: any;\r\n  location: any;\r\n  count = 0;\r\n  countZero: boolean = false;\r\n  cartArray=[];\r\n  items: any;\r\n  datas: any;\r\n  individualAmount: number = 0;\r\n  totalAmount: number = 0;\r\n \r\n  constructor(private http: HttpClient, private route: ActivatedRoute, public restuarantService: RestuarantService, private router: Router, public authService: AuthService) { }\r\n\r\n  async ngOnInit(): Promise<any> {\r\n    this.route.paramMap.subscribe((params: ParamMap) => {\r\n      const id = params.get('id');\r\n      this.productId = id;\r\n      this.restuarantService.productId = this.productId;\r\n    });\r\n    await this.getRestuarantbyId();\r\n    await this.restuarantService.getUserid();\r\n  }\r\n\r\n  redirectTocart(){\r\n    this.router.navigate(['/cart',this.restuarantService.userId]);\r\n  }\r\n  getRestuarantbyId(){\r\n    this.http.get(`restaurants/${this.productId}`).subscribe(\r\n      res=>{\r\n        this.products = Object.entries(res);\r\n        this.productArray = this.products[0][1];\r\n        this.name = this.productArray.name;\r\n        \r\n        this.about = this.productArray.about;\r\n        this.location = this.productArray.location;\r\n        this.productArray.Items.forEach(item => {\r\n          const items = {\r\n            id : item._id,\r\n            foodName : item.foodName,\r\n            price : item.price,\r\n            count : this.count,\r\n            amount:this.individualAmount\r\n          };\r\n          this.itemArray.push(items);\r\n          \r\n        })\r\n      },\r\n      err => {\r\n        if(err instanceof HttpErrorResponse){\r\n          if(err.status === 401 ){\r\n            this.router.navigate(['/']);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  decrementQuantity(item){\r\n    this.individualAmount = 0;\r\n    this.count = this.count-1;\r\n    if(item.count==1){\r\n      this.countZero = true;\r\n    }\r\n    item.count = item.count-1;\r\n    item.amount = item.price*item.count;\r\n    this.totalAmount = this.totalAmount-item.price;\r\n    this.cartArray.push(item);\r\n  }\r\n\r\n  incrementQuantity(item){\r\n    this.individualAmount = 0;\r\n    this.count = this.count+1;\r\n    if(item.count>1){\r\n      this.countZero = false;\r\n    }\r\n    item.count = item.count+1;\r\n    item.amount = item.price*item.count;\r\n    this.totalAmount = this.totalAmount+item.price;\r\n    this.cartArray.push(item);\r\n  }\r\n\r\n  async addTocart(){\r\n    let ids = this.cartArray.map(o => o.id)\r\n    let uniqueItems = this.cartArray.filter(({id}, index) => !ids.includes(id, index+1))\r\n    this.restuarantService.cartItems = (uniqueItems.filter(item => item.count));\r\n    const obj = {\r\n      userId:this.restuarantService.userId,\r\n      name:this.name,\r\n      array:this.restuarantService.cartItems,\r\n      totalAmount:this.totalAmount\r\n    }\r\n    const success = await this.http.post('cart',obj).toPromise();\r\n    if(success){\r\n      this.router.navigate(['/cart',this.restuarantService.userId]);\r\n    }\r\n  }\r\n}\r\n","<mat-toolbar class=\"navbar\">\r\n    <div>\r\n        <h2>Hunger End</h2>\r\n    </div>\r\n    <div class=\"toolbar\">\r\n       \r\n        <span>\r\n            <button mat-button class=\"quickView\" (click)='redirectTocart()'><i class=\"fa fa-shopping-bag\"></i>Cart</button>\r\n        </span>\r\n        <span>\r\n            <button mat-button class=\"quickView\" (click)='authService.logOutuser()'><i class=\"fa fa-user\" ></i>Log Out</button>\r\n        </span>\r\n    </div>\r\n</mat-toolbar>\r\n<div class=\"bgImage\">\r\n    <div class=\"tableValues\">\r\n        <h1 style=\"color: white;\">{{name}}</h1>\r\n        <h2 style=\"color: white;\">{{location}}</h2>    \r\n        <table class=\"table table-striped table-success table-bordered\">\r\n            <thead>\r\n                <th>Item</th>\r\n                <th>Price</th>\r\n                <th>Count</th>\r\n                <th>Amount</th>\r\n            </thead>\r\n            <tbody  *ngFor=\"let item of itemArray\">\r\n                <td >{{item.foodName}}</td>\r\n                <td >{{item.price}}</td>\r\n                <td ><button mat-raised-button [disabled]='!item.count'  (click)='decrementQuantity(item)'>-</button> {{item.count}} <button mat-raised-button (click)='incrementQuantity(item)'>+</button></td>\r\n                <td >{{item.amount}}</td>\r\n            </tbody>\r\n        </table>\r\n        <h2 style=\"color: white;\">Cart Details</h2>\r\n        <table class =\"col-sm-6 table table-striped table-bordered table-warning\"> \r\n            <thead>\r\n                <th>No.Of.Items</th>\r\n                <th>Total Amount</th>    \r\n            </thead>\r\n            <tbody>\r\n                <td>{{count}}</td>\r\n                <td>{{totalAmount}}</td>\r\n            </tbody>\r\n        </table>\r\n        \r\n        <button mat-raised-button class=\"quickView\" [disabled]='!count'  (click)='addTocart()'>Add To Cart</button>\r\n    </div>\r\n    \r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SignupcomponentComponent } from '../signupcomponent/signupcomponent.component';\r\nimport {FormBuilder, FormGroup, Validators, FormControl, ReactiveFormsModule} from '@angular/forms';\r\nimport { RouterLink, Router } from '@angular/router';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RestuarantService } from '../restuarant.service';\r\n\r\n@Component({\r\n  selector: 'app-logincomponent',\r\n  templateUrl: './logincomponent.component.html',\r\n  styleUrls: ['./logincomponent.component.css']\r\n})\r\nexport class LogincomponentComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  public redirectingTo;\r\n  constructor(public dialog: MatDialog, private formBuilder: FormBuilder, private restuarantService: RestuarantService, private route: Router, private http: HttpClient, private snackbar: MatSnackBar) {\r\n    this.loginForm = this.formBuilder.group({\r\n      emailId: ['', [Validators.required, Validators.email]],\r\n      password : ['' , [Validators.required, Validators.pattern('^.{8,15}$')]]\r\n    });\r\n   }\r\n  ngOnInit(): void {\r\n  }\r\n  openSignupdialog(): void {\r\n    this.dialog.open(SignupcomponentComponent, {width: '50%'});\r\n  }\r\n\r\n  async redirectTorestuarantPage(action) {\r\n    if (this.loginForm.valid) {\r\n    await this.http.post('login',this.loginForm.value).subscribe(\r\n     res => {\r\n       const response = Object.entries(res);\r\n       this.restuarantService.userId = response[0][1];\r\n       localStorage.setItem('token',response[1][1]);\r\n        this.route.navigate(['/restaurants']);\r\n        this.dialog.closeAll();\r\n      \r\n      },\r\n      err => {      \r\n      if(err.error == \"Invalid Email\"){\r\n        const snackbarRef = this.snackbar.open('The E-mail Id is not registered', action, {duration: 8000});\r\n        this.dialog.closeAll();\r\n        snackbarRef.onAction().subscribe(() => {\r\n          this.dialog.open(SignupcomponentComponent, {width: '50%'});\r\n        })      \r\n        \r\n      }\r\n      else if(err.error == \"Invalid Password\"){\r\n        const snackbarRef = this.snackbar.open('Incorrect Password', null, {duration: 2000});\r\n      }\r\n    }\r\n    );      \r\n     }\r\n    }\r\n\r\n  get loginDetails() {\r\n    return this.loginForm.controls;\r\n    \r\n  }\r\n}\r\n","<mat-dialog-actions style=\"float: right;\"><button mat-button mat-dialog-close>X</button></mat-dialog-actions>\r\n<h2 mat-dialog-title>LOGIN</h2>\r\n\r\n<mat-dialog-content>\r\n    <div class=\"loginItems\">\r\n        <div style=\"display:flex\">\r\n            <div>\r\n                \r\n                <p><b>Don't have an account?</b> <a mat-button mat-dialog-close id=\"createAccBtn\" (click)='openSignupdialog()'>Create an account</a></p>\r\n\r\n            </div>\r\n            <div >\r\n                <img src=\"assets/Images/ghee-roast.jpg\" width=\"30%\" alt=\"Food\" id=\"dosaImage\">                \r\n            </div>\r\n        </div>  \r\n        <div class=\"inputField\">\r\n            \r\n        </div>\r\n        <form [formGroup]= 'loginForm'>\r\n            <div class=\"row \">\r\n                \r\n                <mat-form-field class=\"col-sm-4 loginEmailId\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput type=\"email\" required  placeholder=\"Enter Email Address\" formControlName='emailId'>\r\n                    <mat-error *ngIf=\"loginDetails.emailId.errors?.required && loginDetails.emailId.touched \" style=\"color: red;\">This Field is Required</mat-error>\r\n                    <mat-error *ngIf=\"loginDetails.emailId.errors?.email && loginDetails.emailId.touched\" style=\"color: red;\">Enter Valid Email Id</mat-error>\r\n                </mat-form-field>\r\n                \r\n            </div>\r\n            <div class=\"row\">\r\n                <mat-form-field class=\"col-sm-4 loginPassword\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput type=\"password\" placeholder=\"Enter Password\" formControlName = 'password' required>\r\n                    <mat-error *ngIf=\"loginDetails.password.errors?.required && loginDetails.password.touched\"style=\"color: red;\">This Field is Required</mat-error>\r\n                    <mat-error *ngIf=\"loginDetails.password.errors?.pattern && loginDetails.password.touched\"style=\"color: red;\">Enter Valid Password</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"row\">\r\n                <button class=\"col-sm-4\" type=\"submit\"(click)='redirectTorestuarantPage(\"Register\")'  mat-raised-button id=\"loginButton\">LOGIN</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</mat-dialog-content>","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { RestuarantService } from '../restuarant.service';\r\n\r\n@Component({\r\n  selector: 'app-otp-dialog',\r\n  templateUrl: './otp-dialog.component.html',\r\n  styleUrls: ['./otp-dialog.component.css']\r\n})\r\nexport class OtpDialogComponent implements OnInit {\r\n  otpForm: FormGroup;\r\n  otpValidationForm: FormGroup;\r\n  otp: Object;\r\n  valueEntered:boolean = true;\r\n  constructor(private FormBuilder: FormBuilder,private http: HttpClient,private dialog: MatDialog,private restuarantService : RestuarantService, private snackbar: MatSnackBar, private router:Router) {\r\n    this.otpForm = this.FormBuilder.group({\r\n      emailId:['',[Validators.required,Validators.email]]\r\n    });\r\n    this.otpValidationForm = this.FormBuilder.group({\r\n      otpValue:['',Validators.required]\r\n    });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  \r\n  otpGeneration(){\r\n    this.http.post('sendEmail',this.otpForm.value).subscribe(res=>{\r\n      this.otp = res;\r\n      this.valueEntered = false;\r\n    },\r\n)\r\n  }\r\n  async validateOtp(){\r\n    if(this.otp==this.otpValidationForm.value.otpValue){\r\n      const snackbarRef = this.snackbar.open('Your Order Placed Successfully',null,{duration:5000});\r\n      \r\n      await this.http.delete(`cart/${this.restuarantService.cartId}`).subscribe();\r\n      \r\n      this.dialog.closeAll();\r\n      this.router.navigate(['/']);\r\n    }\r\n    else{\r\n      const snackbarRef = this.snackbar.open('Incorrect OTP!!',null,{duration:5000});\r\n    }\r\n  }\r\n}\r\n","<mat-dialog-actions style=\"float: right;\"><button mat-button mat-dialog-close>X</button></mat-dialog-actions>\r\n<h2 mat-dialog-title>OTP Validation</h2>\r\n\r\n<mat-dialog-content>\r\n    <div *ngIf=\"valueEntered\">\r\n        <p>Enter Email Address to send OTP</p>\r\n        <form [formGroup]='otpForm'>\r\n            <mat-form-field class=\"col-sm-4\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput type=\"email\" required  placeholder=\"Enter Email Address\" formControlName='emailId' required>\r\n            </mat-form-field>\r\n        </form>\r\n        <button mat-raised-button  class=\"quickView\" (click)='otpGeneration()'>Send</button>\r\n    </div>\r\n    <div *ngIf=\"!valueEntered\">\r\n        <form [formGroup]='otpValidationForm'>\r\n            <mat-form-field>\r\n                <input matInput type=\"number\" placeholder=\"Enter OTP\" formControlName='otpValue'  required>\r\n            </mat-form-field>        \r\n            <button mat-raised-button  class=\"quickView\" (click)='validateOtp()'>Submit</button>\r\n        </form>\r\n        \r\n    </div>\r\n</mat-dialog-content>","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport {Restaurants} from './models/Restaurants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestuarantService {\r\nuserId;\r\nselectedProduct:Restaurants;\r\nproductId:string;\r\ncartItems = [];\r\ncartId;\r\n  constructor(private authService: AuthService,private http: HttpClient) { }\r\n\r\n  async getUserid(){\r\n    let token = this.authService.getToken();\r\n    const success = await this.http.get(`userDetails/${token}`).toPromise();\r\n    if(success){\r\n      this.userId = success;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpClientModule, HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\nimport { RestuarantService } from '../restuarant.service';\r\n\r\n@Component({\r\n  selector: 'app-restuarant',\r\n  templateUrl: './restuarant.component.html',\r\n  styleUrls: ['./restuarant.component.css']\r\n})\r\nexport class RestuarantComponent implements OnInit {\r\n  itemArray: any;\r\n  constructor(private http:HttpClient, private router: Router, private restuarantService: RestuarantService, public authService : AuthService) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    await this.restuarantService.getUserid();\r\n    await this.getRestuarant();\r\n  }\r\n  redirectTocart(){\r\n    this.router.navigate(['/cart',this.restuarantService.userId]);\r\n  }\r\n\r\n  getRestuarant(){\r\n    this.http.get('restaurants').subscribe( \r\n    res => {      \r\n      this.itemArray = res;\r\n    },\r\n    err=>{\r\n      if(err instanceof HttpErrorResponse){\r\n        if(err.status === 401){\r\n          this.router.navigate(['/']);\r\n        }\r\n      }\r\n    });    \r\n  }\r\n  individualRestuarant(item){\r\n    this.router.navigate(['/restaurants',item._id]);\r\n  }\r\n  \r\n}\r\n","<div class=\"bgImage\">\r\n    <mat-toolbar class=\"navbar\">\r\n        <div>\r\n            <h2>Hunger End</h2>\r\n        </div>\r\n        <div class=\"toolbar\">     \r\n            <span>\r\n                <button mat-button class=\"quickView\" (click)='redirectTocart()'><i class=\"fa fa-shopping-bag\"></i>Cart</button>\r\n            </span>\r\n            <span>\r\n                <button mat-button class=\"quickView\" (click)='authService.logOutuser()'><i class=\"fa fa-user\" ></i>Log Out</button>\r\n            </span>\r\n        </div>\r\n    </mat-toolbar>\r\n    <div>\r\n    <div class=\"restuarant\">\r\n        <h1 style=\"text-align: center; font-size: 30px;\">RESTAURANTS</h1>\r\n        <mat-divider></mat-divider>\r\n    </div>\r\n    <div class=\"row col-lg-11\" >\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"restuarants row\">\r\n                <mat-card class=\"col-lg-3 m-5 cardMargin\" *ngFor=\"let item of itemArray\">\r\n                    <mat-card-header>\r\n                        <mat-card-title>{{item.name}}</mat-card-title>\r\n                        <mat-card-subtitle>{{item.location}}</mat-card-subtitle>\r\n                    </mat-card-header>\r\n                    <img mat-card-image src=\"./../../assets/Images/food.jpg\"\r\n                        alt=\"Restuarant\">\r\n                    <mat-card-content>\r\n                        <p>\r\n                           {{item.about}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                    <mat-card-actions>\r\n                        <button mat-button class=\"quickView\" (click)='individualRestuarant(item)'>Quick View</button>\r\n                    </mat-card-actions>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n        <!-- <div class=\"col-lg-4\">\r\n            <div class=\"imageSide\">\r\n                <p>Hi</p>\r\n            </div>\r\n        </div>     -->\r\n    </div>    \r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { LogincomponentComponent } from '../logincomponent/logincomponent.component';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { RestuarantService } from '../restuarant.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-signupcomponent',\r\n  templateUrl: './signupcomponent.component.html',\r\n  styleUrls: ['./signupcomponent.component.css']\r\n})\r\nexport class SignupcomponentComponent implements OnInit {\r\n  signupForm: FormGroup;\r\n  public signupDialogClose = false;\r\n  constructor(public dialog: MatDialog, private formBuilder: FormBuilder, private snackbar: MatSnackBar, private http: HttpClient, private router: Router, private restuarantService: RestuarantService) {\r\n    this.signupForm = this.formBuilder.group({\r\n      phoneNumber: [null, [Validators.required, Validators.pattern('[0-9]{10}')]],\r\n      name: ['', [Validators.required, Validators.pattern('[A-Za-z0-9_@./#&+-\\\\s\\\\S]{1,150}')]],\r\n      emailId: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.pattern('^.{8,15}$')]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  openLogindialog() {\r\n    this.dialog.open(LogincomponentComponent, {width: '50%'});\r\n  }\r\n  get signupDetails() {\r\n    return this.signupForm.controls;\r\n  }\r\n\r\n  async openSignupSnackbar(message) {\r\n    if (this.signupForm.valid) {\r\n      await this.http.post('signup',this.signupForm.value).subscribe(\r\n        res=>{\r\n          const response = Object.entries(res);\r\n          this.restuarantService.userId = response[0][1];\r\n          localStorage.setItem('token',response[1][1]);\r\n          const snackbarRef = this.snackbar.open(message, null, {duration: 2000});\r\n          this.dialog.closeAll();\r\n          this.router.navigate(['/restaurants']);\r\n        },\r\n      err=>{\r\n        if(err.error == \"User Already Registered\"){\r\n          const snackbarRef = this.snackbar.open(err.error, 'LOGIN', {duration: 8000});\r\n          snackbarRef.onAction().subscribe(() => {\r\n            this.dialog.closeAll();\r\n            this.dialog.open(LogincomponentComponent, {width: '50%'});\r\n          })  \r\n        }\r\n        else{\r\n          \r\n        }    \r\n        \r\n      });\r\n    }\r\n  }\r\n}","<mat-dialog-actions style=\"float:right !important\"><button mat-button mat-dialog-close >X</button></mat-dialog-actions>\n<h2 mat-dialog-title>SIGN UP </h2>\n<mat-dialog-content>\n    <div class=\"signupItems\">\n        <div style=\"display:flex\">\n            <div>\n                <p><b>Already have an account?</b> <a mat-button id=\"logintoAccBtn\" mat-dialog-close (click)='openLogindialog()'>Log In to our account</a></p>\n            </div>\n            <div>\n                <img src=\"assets/Images/ghee-roast.jpg\" width=\"30%\" alt=\"Food\" id=\"dosaImage\">\n            </div>\n        </div>\n        <form [formGroup]='signupForm'>\n            <div class=\"row\">\n                <mat-form-field class=\"col-sm-4 signUpNumber\">\n                    <mat-label>Phone Number</mat-label>\n                    <input matInput type=\"tel\" placeholder=\"Enter Phone Number\" formControlName='phoneNumber' required>\n                    <mat-error *ngIf=\"signupDetails.phoneNumber.errors?.required && signupDetails.phoneNumber.touched \" style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"signupDetails.phoneNumber.errors?.pattern && signupDetails.phoneNumber.touched\" style=\"color: red;\">Enter Valid Phone Number</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <mat-form-field class=\"col-sm-4 signUpName\">\n                    <mat-label>Name</mat-label>\n                    <input matInput type=\"text\" placeholder=\"Enter Name\" formControlName='name' required>\n                    <mat-error *ngIf=\"signupDetails.name.errors?.required && signupDetails.name.touched \" style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"signupDetails.name.errors?.pattern && signupDetails.name.touched\" style=\"color: red;\">Enter Valid Format</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <mat-form-field class=\"col-sm-4 signUpEmailId\">\n                    <mat-label>Email</mat-label>\n                    <input matInput type=\"email\" placeholder=\"Enter Email Address\" formControlName='emailId'required>\n                    <mat-error *ngIf=\"signupDetails.emailId.errors?.required && signupDetails.emailId.touched \" style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"signupDetails.emailId.errors?.email && signupDetails.emailId.touched\" style=\"color: red;\">Enter Valid Email Id</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <mat-form-field class=\"col-sm-4 signUpPassword\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" placeholder=\"Enter Password\" formControlName='password'required>\n                    <mat-error *ngIf=\"signupDetails.password.errors?.required && signupDetails.password.touched \" style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"signupDetails.password.errors?.pattern && signupDetails.password.touched\" style=\"color: red;\">There Should be 8 to 15 characters</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <button class=\"col-sm-4\" mat-raised-button id=\"signUpButton\"   (click)='openSignupSnackbar(\"SignUp Successfull\")'>SIGN UP</button>\n            </div>  \n        </form>      \n    </div>\n</mat-dialog-content>","import { HttpInterceptor } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private injector:Injector) { }\r\n\r\n  intercept(req,next){\r\n    let authService = this.injector.get(AuthService)\r\n    let tokenizedReq = req.clone({\r\n      setHeaders:{\r\n        Authorization:`Bearer ${authService.getToken()}`\r\n      }\r\n    });\r\n    return next.handle(tokenizedReq);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}